/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ecklundcorp.financetracker.mycosts;

import com.ecklundcorp.financetracker.gettingbillsandpayments.ReadFromExcel;
import com.ecklundcorp.financetracker.import_export.Import_Export;
import com.ecklundcorp.financetracker.updateeverything.UpdateEverything;
import com.ecklundcorp.financetracker.updateeverything.UpdateEverythingBills;
import com.ecklundcorp.financetracker.updateeverything.UpdateEverythingIncome;
import com.ecklundcorp.financetracker.updateeverything.UpdateExcel;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dillon
 */
public class MyCosts extends javax.swing.JFrame {

    /**
     * Creates new form MyCosts
     */
    
    ArrayList<Bills> bills;
    ArrayList<Income> income;
    ArrayList<String> billQueries;
    ArrayList<String> incomeQueries;
    ArrayList<Bills> billQueryResults;
    ArrayList<Income> incomeQueryResults;
    ArrayList<Bills> billSearch;
    int numPayments = 0;
    int numBills = 0;
    
    DecimalFormat moneyFormat;
    
    ButtonGroup exportButtonBG;
    
    public MyCosts() throws IOException, SQLException {
        initComponents();
                
        // Set up money format
        moneyFormat = new DecimalFormat("###,##0.00");
        
        // ArrayLists
        bills = new ArrayList<>();
        income = new ArrayList<>();
        billQueries = new ArrayList<>();
        incomeQueries = new ArrayList<>();
        billQueryResults = new ArrayList<>();
        incomeQueryResults = new ArrayList<>();
        billSearch = new ArrayList<>();
        
        // Get the user's bill and income information
        ReadFromExcel reader = new ReadFromExcel();
        reader.read();
        numBills = reader.getBills().size();
        numPayments = reader.getIncome().size();
        bills = reader.getBills();
        income = reader.getIncome();
        
        // Populate everything with bills and income        
        updateEverything();
        
        UpdateEverythingBills billUpdater = new UpdateEverythingBills();
        billUpdater.updateBillQueryList(billQueryList, billQueryCB, billQueries, bills);
        billUpdater.updateSummaryLabels(totalBillsLBL, totalMoneyMadeLBL, gainLossLBL, income, bills);
        
        UpdateEverythingIncome incomeUpdater = new UpdateEverythingIncome();
        incomeUpdater.updateIncomeQueryList(paymentQueryList, paymentQueryCB, incomeQueries, incomeQueryResults, income);
        incomeUpdater.updateSummaryLabels(totalBillsLBL, totalMoneyMadeLBL, gainLossLBL, income, bills);
        
        exportButtonBG = new ButtonGroup();
        exportButtonBG.add(basicExportRB);
        exportButtonBG.add(incomeBillsBreakdownRB);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        billSummaryTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        totalBillsLBL = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        totalMoneyMadeLBL = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        gainLossLBL = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        incomeSummaryTable = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        billQueryCB = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        billQueryTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        billQueryList = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        billQueryTotalExpenseLBL = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        paymentQueryTable = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        paymentQueryCB = new javax.swing.JComboBox<>();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        paymentQueryList = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        paymentQueryTotalIncomeLBL = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        listOfBillsLBL = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        billsList = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        billCategoryCB = new javax.swing.JComboBox<>();
        billDescriptionLBL = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        billPaidDateTF = new javax.swing.JTextField();
        removeBillButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        billCostTF = new javax.swing.JTextField();
        createUpdateBillButton = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        addBillCategoryCB = new javax.swing.JCheckBox();
        newBillCategoryLBL = new javax.swing.JLabel();
        newBillCategoryTF = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        billDescriptionTA = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        billSearchTF = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        paymentCategoryCB = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        incomeList = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        incomeDateTF = new javax.swing.JTextField();
        incomeTF = new javax.swing.JTextField();
        removePaymentButton = new javax.swing.JButton();
        createPaymentButton = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        newIncomeCategoryCB = new javax.swing.JCheckBox();
        newIncomeCategoryLBL = new javax.swing.JLabel();
        newIncomeCategoryTF = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        incomeDescriptionTA = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        paymentSearchTF = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        importButton = new javax.swing.JButton();
        importFileLBL = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        importIssuesTable = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        exportButton = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        exportProgressBar = new javax.swing.JProgressBar();
        jLabel19 = new javax.swing.JLabel();
        exportProgressLBL = new javax.swing.JLabel();
        reportTypeLBL = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        basicExportRB = new javax.swing.JRadioButton();
        incomeBillsBreakdownRB = new javax.swing.JRadioButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Financial Calculator");
        setResizable(false);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        billSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Category", "Bill"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(billSummaryTable);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Total money spent on bills: ");

        totalBillsLBL.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        totalBillsLBL.setText("$0.00");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Total money I was paid:");

        totalMoneyMadeLBL.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        totalMoneyMadeLBL.setText("$0.00");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Total Gain/Loss:");

        gainLossLBL.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        gainLossLBL.setText("$0.00");

        incomeSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Category", "How much I was paid"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(incomeSummaryTable);

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Summary of Income:");

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Summary of Bills:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1033, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(totalBillsLBL, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(totalMoneyMadeLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gainLossLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(gainLossLBL)
                    .addComponent(jLabel2)
                    .addComponent(totalBillsLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(totalMoneyMadeLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Bills Summary", jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Query Bills:"));

        billQueryCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "By Category", "By Category and Month (Month/Year)", "By Date (Day)", "By Date (Month/Year)", "By Date (Year)" }));
        billQueryCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billQueryCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(billQueryCB, 0, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(billQueryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        billQueryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Category", "Bill"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(billQueryTable);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Query List"));

        billQueryList.setModel(new DefaultListModel());
        billQueryList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        billQueryList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                billQueryListValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(billQueryList);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel11.setText("Total Expese Value of Query:");

        billQueryTotalExpenseLBL.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        billQueryTotalExpenseLBL.setText("$0.00");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(billQueryTotalExpenseLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(billQueryTotalExpenseLBL)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        jTabbedPane1.addTab("Bills Breakdown", jPanel4);

        paymentQueryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Category", "Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(paymentQueryTable);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Query Payments:"));

        paymentQueryCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "By Category", "By Category and Month (Month/Year)", "By Date (Day)", "By Date (Month/Year)", "By Date (Year)" }));
        paymentQueryCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentQueryCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paymentQueryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(paymentQueryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Query List:"));

        paymentQueryList.setModel(new DefaultListModel());
        paymentQueryList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        paymentQueryList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                paymentQueryListValueChanged(evt);
            }
        });
        jScrollPane8.setViewportView(paymentQueryList);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setText("Total Dollar Value of query:");

        paymentQueryTotalIncomeLBL.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        paymentQueryTotalIncomeLBL.setText("$0.00");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(paymentQueryTotalIncomeLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paymentQueryTotalIncomeLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 87, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Paychecks Breakdown", jPanel6);

        listOfBillsLBL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        listOfBillsLBL.setText("List of Bills:");

        billsList.setModel(new DefaultListModel());
        billsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        billsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                billsListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(billsList);

        billDescriptionLBL.setText("Pick the Bill Category:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(billDescriptionLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(billCategoryCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(billCategoryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(billDescriptionLBL))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setText("Bill Paid Date:");

        billPaidDateTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                billPaidDateTFCaretUpdate(evt);
            }
        });

        removeBillButton.setText("Remove Selected Bill");
        removeBillButton.setEnabled(false);
        removeBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBillButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("How much was the bill?:");

        billCostTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                billCostTFCaretUpdate(evt);
            }
        });

        createUpdateBillButton.setText("Create Bill");
        createUpdateBillButton.setEnabled(false);
        createUpdateBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUpdateBillButtonActionPerformed(evt);
            }
        });

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Category missing?"));

        addBillCategoryCB.setText("Click Me");
        addBillCategoryCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBillCategoryCBActionPerformed(evt);
            }
        });

        newBillCategoryLBL.setText("Enter Category name below:");
        newBillCategoryLBL.setEnabled(false);

        newBillCategoryTF.setEnabled(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newBillCategoryTF)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addBillCategoryCB)
                            .addComponent(newBillCategoryLBL))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addBillCategoryCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newBillCategoryLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newBillCategoryTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        billDescriptionTA.setColumns(20);
        billDescriptionTA.setRows(5);
        jScrollPane9.setViewportView(billDescriptionTA);

        jLabel12.setText("Search for bill:");

        billSearchTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                billSearchTFCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(billCostTF, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(billPaidDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(createUpdateBillButton)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(removeBillButton)
                        .addComponent(listOfBillsLBL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(billSearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(listOfBillsLBL)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(billSearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(billPaidDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(billCostTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createUpdateBillButton)
                    .addComponent(removeBillButton))
                .addGap(65, 65, 65))
        );

        jTabbedPane1.addTab("Add/Remove Bills", jPanel2);

        jLabel5.setText("Payment Category:");

        paymentCategoryCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                paymentCategoryCBItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paymentCategoryCB, 0, 156, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(paymentCategoryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setText("Income Date:");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("List of Payments:");

        incomeList.setModel(new DefaultListModel());
        incomeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        incomeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                incomeListValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(incomeList);

        jLabel9.setText("How much Paid:");

        incomeDateTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                incomeDateTFCaretUpdate(evt);
            }
        });

        incomeTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                incomeTFCaretUpdate(evt);
            }
        });

        removePaymentButton.setText("Remove Payment");
        removePaymentButton.setEnabled(false);
        removePaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePaymentButtonActionPerformed(evt);
            }
        });

        createPaymentButton.setText("Create Payment");
        createPaymentButton.setEnabled(false);
        createPaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPaymentButtonActionPerformed(evt);
            }
        });

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Category Missing?:"));

        newIncomeCategoryCB.setText("Click Me");
        newIncomeCategoryCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newIncomeCategoryCBActionPerformed(evt);
            }
        });

        newIncomeCategoryLBL.setText("Enter Category Name Below:");
        newIncomeCategoryLBL.setEnabled(false);

        newIncomeCategoryTF.setEnabled(false);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newIncomeCategoryLBL, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(newIncomeCategoryCB)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(newIncomeCategoryTF))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newIncomeCategoryCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newIncomeCategoryLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newIncomeCategoryTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        incomeDescriptionTA.setColumns(20);
        incomeDescriptionTA.setRows(5);
        jScrollPane10.setViewportView(incomeDescriptionTA);

        jLabel13.setText("Search for payment:");

        paymentSearchTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                paymentSearchTFCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createPaymentButton)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(incomeDateTF)
                                    .addComponent(incomeTF)))
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paymentSearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removePaymentButton)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(incomeDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(incomeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(paymentSearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removePaymentButton)
                    .addComponent(createPaymentButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add/Remove Paychecks", jPanel7);

        jPanel18.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel17.setText("Click the button to import data:");

        importButton.setText("Import");
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });

        importFileLBL.setText("File: ");

        importIssuesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Where issue occured", "What the issue is"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(importIssuesTable);

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Issues occured while importing file");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                    .addComponent(importFileLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(importButton))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(importFileLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(importButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("1. Click the import button.\n\n2. Choose a file ");
        jScrollPane11.setViewportView(jTextArea1);

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Instructions for Importing Data");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Import", jPanel17);

        jPanel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        exportButton.setText("Export to Excel");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        jPanel20.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Progress for Export:");

        exportProgressLBL.setText("jLabel20");

        reportTypeLBL.setText("jLabel20");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(reportTypeLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exportProgressLBL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel20Layout.createSequentialGroup()
                        .addComponent(exportProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exportProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exportProgressLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reportTypeLBL, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Pick a type of export you want"));

        basicExportRB.setSelected(true);
        basicExportRB.setText("Basic Export");

        incomeBillsBreakdownRB.setText("Income/Bills Breakdown Report");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(incomeBillsBreakdownRB)
                    .addComponent(basicExportRB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(basicExportRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(incomeBillsBreakdownRB)
                .addContainerGap(300, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 452, Short.MAX_VALUE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(exportButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exportButton)
                .addContainerGap())
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Export Example");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Export Options");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Export", jPanel10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 993, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        
        exportButton.setEnabled(false);
        String reportType = "";

        if(basicExportRB.isSelected()){
            reportType = "Basic Export";
            reportTypeLBL.setText("Basic Export");
        }
        else if(incomeBillsBreakdownRB.isSelected()){
            reportType = "Income/Bills Breakdown Export";
            reportTypeLBL.setText("Income/Bills Breakdown Export");
        }

        Import_Export export = new Import_Export();
        try {
            export.exportFile(bills, income, exportProgressBar, exportProgressLBL, reportType);
        } catch (IOException ex) {
            Logger.getLogger(MyCosts.class.getName()).log(Level.SEVERE, null, ex);
        }
        exportButton.setEnabled(true);

    }//GEN-LAST:event_exportButtonActionPerformed

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed


        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jfc.setDialogTitle("Select your bank statement");
        jfc.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV", "csv");
        jfc.addChoosableFileFilter(filter);

        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            Import_Export ie = new Import_Export();
            try {
                ie.importFile(jfc.getSelectedFile().getPath(), bills, income, importIssuesTable);
                bills = ie.getBills();
                income = ie.getIncome();
            } catch (IOException ex) {
                Logger.getLogger(MyCosts.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(MyCosts.class.getName()).log(Level.SEVERE, null, ex);
            }

            importFileLBL.setText("File: " + jfc.getSelectedFile().getName());
        }

        UpdateExcel updater = new UpdateExcel();
        updater.update(bills, income);
        updateEverything();
        updateBillSummaryLabels();

    }//GEN-LAST:event_importButtonActionPerformed

    private void paymentSearchTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_paymentSearchTFCaretUpdate

        DefaultListModel model = (DefaultListModel) incomeList.getModel();

        model.removeAllElements();

        for(int i = 0; i < income.size(); i++){

            if(income.get(i).getCategory().toUpperCase().startsWith(paymentSearchTF.getText().toUpperCase())){
                model.addElement(income.get(i).getDate() + " " + income.get(i).getCategory() + " " + moneyFormat.format(income.get(i).getIncome()));
            }

        }

    }//GEN-LAST:event_paymentSearchTFCaretUpdate

    private void newIncomeCategoryCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newIncomeCategoryCBActionPerformed

        if(newIncomeCategoryCB.isSelected()){
            newIncomeCategoryLBL.setEnabled(true);
            newIncomeCategoryTF.setEnabled(true);
        }
        else{
            newIncomeCategoryLBL.setEnabled(false);
            newIncomeCategoryTF.setEnabled(false);
        }

    }//GEN-LAST:event_newIncomeCategoryCBActionPerformed

    private void createPaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPaymentButtonActionPerformed

        Income newIncome = new Income();

        if((incomeDateTF.getText().split("/")[0].equals("01") || incomeDateTF.getText().split("/")[0].equals("02")
            || incomeDateTF.getText().split("/")[0].equals("03") || incomeDateTF.getText().split("/")[0].equals("04")
            || incomeDateTF.getText().split("/")[0].equals("05") || incomeDateTF.getText().split("/")[0].equals("06")
            || incomeDateTF.getText().split("/")[0].equals("07") || incomeDateTF.getText().split("/")[0].equals("08")
            || incomeDateTF.getText().split("/")[0].equals("09") || incomeDateTF.getText().split("/")[0].equals("10")
            || incomeDateTF.getText().split("/")[0].equals("11") || incomeDateTF.getText().split("/")[0].equals("12"))){

        if(incomeList.getSelectedIndex() < 0){

            try{

                if(newIncomeCategoryCB.isSelected()){

                    newIncome.setDate(incomeDateTF.getText());
                    newIncome.setCategory(newIncomeCategoryTF.getText());
                    newIncome.setIncome(Double.parseDouble(incomeTF.getText()));
                    newIncome.setDescription(incomeDescriptionTA.getText());

                    income.add(newIncome);

                    updateEverything();
                    updateIncomeSummaryLabels();

                    paymentCategoryCB.setSelectedIndex(0);
                    incomeDateTF.setText("");
                    incomeTF.setText("");
                    incomeDescriptionTA.setText("");

                    newIncomeCategoryCB.setSelected(false);
                    newIncomeCategoryLBL.setEnabled(false);
                    newIncomeCategoryTF.setEnabled(false);

                    updateExcel();

                }
                else{

                    newIncome.setDate(incomeDateTF.getText());

                    if(newIncomeCategoryCB.isSelected()){
                        newIncome.setCategory(newIncomeCategoryTF.getText());
                    }
                    else{
                        newIncome.setCategory(paymentCategoryCB.getSelectedItem().toString());
                    }

                    newIncome.setIncome(Double.parseDouble(incomeTF.getText()));
                    newIncome.setDescription(incomeDescriptionTA.getText());
                    income.add(newIncome);

                    updateEverything();
                    updateIncomeSummaryLabels();

                    paymentCategoryCB.setSelectedIndex(0);
                    incomeDateTF.setText("");
                    incomeTF.setText("");
                    incomeDescriptionTA.setText("");

                    newIncomeCategoryCB.setSelected(false);
                    newIncomeCategoryLBL.setEnabled(false);
                    newIncomeCategoryTF.setEnabled(false);

                    updateExcel();

                }

            }catch(NumberFormatException num){
                JOptionPane.showMessageDialog(null, "You have not entered a number in one of the text fields, please enter a number to continue.");
            }

        }
        else{

            try{

                income.get(incomeList.getSelectedIndex()).setDate(incomeDateTF.getText());

                if(newIncomeCategoryCB.isSelected()){
                    income.get(incomeList.getSelectedIndex()).setCategory(newIncomeCategoryTF.getText());
                }else{
                    income.get(incomeList.getSelectedIndex()).setCategory(paymentCategoryCB.getSelectedItem().toString());
                }
                income.get(incomeList.getSelectedIndex()).setIncome(Double.parseDouble(incomeTF.getText()));
                income.get(incomeList.getSelectedIndex()).setDescription(incomeDescriptionTA.getText());

                updateEverything();
                updateIncomeSummaryLabels();

                paymentCategoryCB.setSelectedIndex(0);
                incomeDateTF.setText("");
                incomeTF.setText("");
                incomeDescriptionTA.setText("");

                newIncomeCategoryCB.setSelected(false);
                newIncomeCategoryLBL.setEnabled(false);
                newIncomeCategoryTF.setEnabled(false);

                updateExcel();

            }catch(NumberFormatException num){
                JOptionPane.showMessageDialog(null, "You have not entered a number in the text field next to 'How much Paid:'");
            }

        }

        }
        else{
            JOptionPane.showMessageDialog(null, "You entered an inproper date format. It needs to be in this format: MM/DD/YYYY");
        }

    }//GEN-LAST:event_createPaymentButtonActionPerformed

    private void removePaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePaymentButtonActionPerformed

        income.remove(incomeList.getSelectedIndex());
        incomeList.setSelectedIndex(-1);

        updateEverything();
        updateIncomeSummaryLabels();
        updateExcel();

    }//GEN-LAST:event_removePaymentButtonActionPerformed

    private void incomeTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_incomeTFCaretUpdate

        if(incomeDateTF.getText().equals("") || incomeDateTF.getText().startsWith(" ") || incomeTF.getText().equals("") || incomeTF.getText().startsWith(" ")){
            createPaymentButton.setEnabled(false);
        }
        else{
            createPaymentButton.setEnabled(true);
        }

    }//GEN-LAST:event_incomeTFCaretUpdate

    private void incomeDateTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_incomeDateTFCaretUpdate

        if(incomeDateTF.getText().equals("") || incomeDateTF.getText().startsWith(" ") || incomeTF.getText().equals("") || incomeTF.getText().startsWith(" ")){
            createPaymentButton.setEnabled(false);
        }
        else{
            createPaymentButton.setEnabled(true);
        }

    }//GEN-LAST:event_incomeDateTFCaretUpdate

    private void incomeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_incomeListValueChanged

        newIncomeCategoryCB.setSelected(false);
        newIncomeCategoryTF.setText("");
        newIncomeCategoryTF.setEnabled(false);

        if(incomeList.getSelectedIndex() > -1){

            removePaymentButton.setEnabled(true);

            for(int i = 0; i < paymentCategoryCB.getItemCount(); i++){

                if(income.get(incomeList.getSelectedIndex()).getCategory().equals(paymentCategoryCB.getItemAt(i).toString())){
                    paymentCategoryCB.setSelectedIndex(i);
                }

            }

            incomeDateTF.setText(income.get(incomeList.getSelectedIndex()).getDate());
            incomeTF.setText("" + moneyFormat.format(income.get(incomeList.getSelectedIndex()).getIncome()));
            incomeDescriptionTA.setText(income.get(incomeList.getSelectedIndex()).getDescription());
            createPaymentButton.setText("Update Payment");

        }
        else{
            removePaymentButton.setEnabled(false);
            createPaymentButton.setText("Create Payment");
            paymentCategoryCB.setSelectedIndex(0);
            incomeDateTF.setText("");
            incomeTF.setText("");
            incomeDescriptionTA.setText("");

        }

    }//GEN-LAST:event_incomeListValueChanged

    private void paymentCategoryCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_paymentCategoryCBItemStateChanged

        if(paymentCategoryCB.getSelectedIndex() > -1){

        }

    }//GEN-LAST:event_paymentCategoryCBItemStateChanged

    private void billSearchTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_billSearchTFCaretUpdate

        DefaultListModel model = (DefaultListModel) billsList.getModel();

        model.removeAllElements();
        billSearch = null;

        for(int i = 0; i < bills.size(); i++){

            if(bills.get(i).getCategory().toUpperCase().startsWith(billSearchTF.getText().toUpperCase())){
                billSearch.add(bills.get(i));
            }

        }

    }//GEN-LAST:event_billSearchTFCaretUpdate

    private void addBillCategoryCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBillCategoryCBActionPerformed

        if(addBillCategoryCB.isSelected()){
            newBillCategoryLBL.setEnabled(true);
            newBillCategoryTF.setEnabled(true);
        }
        else{
            newBillCategoryLBL.setEnabled(false);
            newBillCategoryTF.setEnabled(false);
        }

    }//GEN-LAST:event_addBillCategoryCBActionPerformed

    private void createUpdateBillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUpdateBillButtonActionPerformed

        Bills createBill = new Bills();

        if((billPaidDateTF.getText().split("/")[0].equals("01") || billPaidDateTF.getText().split("/")[0].equals("02")
            || billPaidDateTF.getText().split("/")[0].equals("03") || billPaidDateTF.getText().split("/")[0].equals("04")
            || billPaidDateTF.getText().split("/")[0].equals("05") || billPaidDateTF.getText().split("/")[0].equals("06")
            || billPaidDateTF.getText().split("/")[0].equals("07") || billPaidDateTF.getText().split("/")[0].equals("08")
            || billPaidDateTF.getText().split("/")[0].equals("09") || billPaidDateTF.getText().split("/")[0].equals("10")
            || billPaidDateTF.getText().split("/")[0].equals("11") || billPaidDateTF.getText().split("/")[0].equals("12"))){

        if(billsList.getSelectedIndex() < 0){

            try{
                if(addBillCategoryCB.isSelected()){

                    createBill.setDate(billPaidDateTF.getText());
                    createBill.setCategory(newBillCategoryTF.getText());
                    createBill.setExpense(Double.parseDouble(billCostTF.getText()));
                    createBill.setDescription(billDescriptionTA.getText());
                    bills.add(createBill);

                    updateEverything();
                    updateBillSummaryLabels();

                    billCategoryCB.setSelectedIndex(0);
                    billPaidDateTF.setText("");
                    billCostTF.setText("");
                    billDescriptionTA.setText("");

                    addBillCategoryCB.setSelected(false);
                    newBillCategoryTF.setText("");

                    newBillCategoryLBL.setEnabled(false);
                    newBillCategoryTF.setEnabled(false);

                    updateExcel();

                }
                else{

                    createBill.setDate(billPaidDateTF.getText());
                    createBill.setCategory(billCategoryCB.getSelectedItem().toString());
                    createBill.setExpense(Double.parseDouble(billCostTF.getText()));
                    createBill.setDescription(billDescriptionTA.getText());
                    bills.add(createBill);

                    updateEverything();
                    updateBillSummaryLabels();

                    billCategoryCB.setSelectedIndex(0);
                    billPaidDateTF.setText("");
                    billCostTF.setText("");
                    billDescriptionTA.setText("");

                    addBillCategoryCB.setSelected(false);
                    newBillCategoryTF.setText("");

                    newBillCategoryLBL.setEnabled(false);
                    newBillCategoryTF.setEnabled(false);

                    updateExcel();

                }

            }catch(NumberFormatException num){
                JOptionPane.showMessageDialog(null, "You have not entered a number in the text field next to 'How much was the bill?:'");
            }

        }
        else{

            try{

                if(billSearch.size() > 0){

                    billSearch.get(billsList.getSelectedIndex()).setDate(billPaidDateTF.getText());
                    if(addBillCategoryCB.isSelected()){
                        billSearch.get(billsList.getSelectedIndex()).setCategory(newBillCategoryTF.getText());
                    }else{
                        billSearch.get(billsList.getSelectedIndex()).setCategory(billCategoryCB.getSelectedItem().toString());
                    }
                    billSearch.get(billsList.getSelectedIndex()).setExpense(Double.parseDouble(billCostTF.getText()));
                    billSearch.get(billsList.getSelectedIndex()).setDescription(billDescriptionTA.getText());

                    for(int i = 0; i < bills.size(); i++){

                        for(int j = 0; j < billSearch.size(); j++){

                            if(bills.get(i).getId() == billSearch.get(j).getId()){

                                bills.get(i).setCategory(billSearch.get(j).getCategory());
                                bills.get(i).setDate(billSearch.get(j).getDate());
                                bills.get(i).setDescription(billSearch.get(j).getDescription());
                                bills.get(i).setExpense(billSearch.get(j).getExpense());

                            }

                        }

                    }

                }
                else{

                    bills.get(billsList.getSelectedIndex()).setDate(billPaidDateTF.getText());
                    if(addBillCategoryCB.isSelected()){
                        bills.get(billsList.getSelectedIndex()).setCategory(newBillCategoryTF.getText());
                    }else{
                        bills.get(billsList.getSelectedIndex()).setCategory(billCategoryCB.getSelectedItem().toString());
                    }
                    bills.get(billsList.getSelectedIndex()).setExpense(Double.parseDouble(billCostTF.getText()));
                    bills.get(billsList.getSelectedIndex()).setDescription(billDescriptionTA.getText());

                }
                updateEverything();
                updateBillSummaryLabels();

                billCategoryCB.setSelectedIndex(0);
                billPaidDateTF.setText("");
                billCostTF.setText("");
                billDescriptionTA.setText("");

                updateExcel();

            }catch(NumberFormatException num){
                JOptionPane.showMessageDialog(null, "You have not entered a number in the text field next to 'How much was the bill?:'");
            }

        }

        }
        else{
            JOptionPane.showMessageDialog(null, "You entered an inproper date format. It needs to be in this format: MM/DD/YYYY");
        }

    }//GEN-LAST:event_createUpdateBillButtonActionPerformed

    private void billCostTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_billCostTFCaretUpdate

        if(billPaidDateTF.getText().equals("") || billPaidDateTF.getText().startsWith(" ") || billCostTF.getText().equals("") || billCostTF.getText().startsWith(" ")){
            createUpdateBillButton.setEnabled(false);
        }
        else{
            createUpdateBillButton.setEnabled(true);
        }

    }//GEN-LAST:event_billCostTFCaretUpdate

    private void removeBillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBillButtonActionPerformed

        bills.remove(billsList.getSelectedIndex());
        billsList.setSelectedIndex(-1);

        updateEverything();
        updateBillSummaryLabels();
        updateExcel();

    }//GEN-LAST:event_removeBillButtonActionPerformed

    private void billPaidDateTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_billPaidDateTFCaretUpdate

        if(billPaidDateTF.getText().equals("") || billPaidDateTF.getText().startsWith(" ") || billCostTF.getText().equals("") || billCostTF.getText().startsWith(" ")){
            createUpdateBillButton.setEnabled(false);
        }
        else{
            createUpdateBillButton.setEnabled(true);
        }

    }//GEN-LAST:event_billPaidDateTFCaretUpdate

    private void billsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_billsListValueChanged

        addBillCategoryCB.setSelected(false);
        newBillCategoryTF.setText("");
        newBillCategoryTF.setEnabled(false);

        if(billSearchTF.getText().equals("") || billSearchTF.getText().startsWith(" ")){

            if(billsList.getSelectedIndex() > -1){
                removeBillButton.setEnabled(true);

                for(int i = 0; i < billCategoryCB.getItemCount(); i++){
                    if(billSearch.size() > 0){
                        if(billSearch.get(billsList.getSelectedIndex()).getCategory().equals(billCategoryCB.getItemAt(i).toString())){
                            billCategoryCB.setSelectedIndex(i);
                        }
                    }
                    else{
                        if(bills.get(billsList.getSelectedIndex()).getCategory().equals(billCategoryCB.getItemAt(i).toString())){
                            billCategoryCB.setSelectedIndex(i);
                        }
                    }

                }

                billPaidDateTF.setText(bills.get(billsList.getSelectedIndex()).getDate());
                billCostTF.setText("" + moneyFormat.format(bills.get(billsList.getSelectedIndex()).getExpense()));
                billDescriptionTA.setText(bills.get(billsList.getSelectedIndex()).getDescription());
                createUpdateBillButton.setText("Update Bill");

            }
            else{
                removeBillButton.setEnabled(false);
                createUpdateBillButton.setText("Create Bill");
                billCategoryCB.setSelectedIndex(0);
                billPaidDateTF.setText("");
                billCostTF.setText("");
                billDescriptionTA.setText("");
            }

        }
        else{

        }

    }//GEN-LAST:event_billsListValueChanged

    private void paymentQueryListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_paymentQueryListValueChanged

        UpdateEverythingIncome incomeUpdater = new UpdateEverythingIncome();

        paymentQueryTotalIncomeLBL.setText("$0.00");

        if(paymentQueryList.getSelectedIndex() > -1){
            incomeUpdater.updateIncomeQueryTable(incomeQueryResults, paymentQueryTable, income, paymentQueryCB, paymentQueryList, paymentQueryTotalIncomeLBL);
        }
        else{

            DefaultTableModel model = (DefaultTableModel) paymentQueryTable.getModel();

            for(int i = model.getRowCount() - 1; i >= 0; i--){
                model.removeRow(i);
            }

        }

    }//GEN-LAST:event_paymentQueryListValueChanged

    private void paymentQueryCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentQueryCBActionPerformed

        UpdateEverythingIncome incomeUpdater = new UpdateEverythingIncome();
        incomeUpdater.updateIncomeQueryList(paymentQueryList, paymentQueryCB, incomeQueries, incomeQueryResults, income);

    }//GEN-LAST:event_paymentQueryCBActionPerformed

    private void billQueryListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_billQueryListValueChanged

        UpdateEverythingBills updater = new UpdateEverythingBills();

        billQueryTotalExpenseLBL.setText("$0.00");

        if(billQueryList.getSelectedIndex() > -1){
            updater.updateBillQueryTable(billQueryResults, billQueryTable, bills, billQueryCB, billQueryList, billQueryTotalExpenseLBL);
        }
        else{

            DefaultTableModel model = (DefaultTableModel) billQueryTable.getModel();

            for(int i = model.getRowCount() - 1; i >= 0; i--){
                model.removeRow(i);
            }

        }

    }//GEN-LAST:event_billQueryListValueChanged

    private void billQueryCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billQueryCBActionPerformed

        UpdateEverythingBills updater = new UpdateEverythingBills();
        updater.updateBillQueryList(billQueryList, billQueryCB, billQueries, bills);

    }//GEN-LAST:event_billQueryCBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyCosts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyCosts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyCosts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyCosts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MyCosts().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MyCosts.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(MyCosts.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public void updateExcel(){
        
        UpdateExcel updater = new UpdateExcel();
        updater.update(bills, income);
        
    }
    
    public void updateEverything(){
        
        UpdateEverything everythingUpdater = new UpdateEverything();
        everythingUpdater.update(totalBillsLBL, totalMoneyMadeLBL, gainLossLBL, billQueryTotalExpenseLBL, billSummaryTable, billQueryTable, billsList, billQueryList, billCategoryCB, billQueryCB, income, billQueries, billQueryResults, incomeSummaryTable, paymentQueryTable, incomeList, paymentQueryList, paymentCategoryCB, paymentQueryCB, paymentQueryTotalIncomeLBL, incomeQueries, bills);
      
    }
    
    public void updateBillSummaryLabels(){
        
        UpdateEverythingBills billUpdater = new UpdateEverythingBills();
        billUpdater.updateSummaryLabels(totalBillsLBL, totalMoneyMadeLBL, gainLossLBL, income, bills);
        
    }
    
    public void updateIncomeSummaryLabels(){
        
        UpdateEverythingIncome incomeUpdater = new UpdateEverythingIncome();
        incomeUpdater.updateSummaryLabels(totalBillsLBL, totalMoneyMadeLBL, gainLossLBL, income, bills);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addBillCategoryCB;
    private javax.swing.JRadioButton basicExportRB;
    private javax.swing.JComboBox<String> billCategoryCB;
    private javax.swing.JTextField billCostTF;
    private javax.swing.JLabel billDescriptionLBL;
    private javax.swing.JTextArea billDescriptionTA;
    private javax.swing.JTextField billPaidDateTF;
    private javax.swing.JComboBox<String> billQueryCB;
    private javax.swing.JList<String> billQueryList;
    private javax.swing.JTable billQueryTable;
    private javax.swing.JLabel billQueryTotalExpenseLBL;
    private javax.swing.JTextField billSearchTF;
    private javax.swing.JTable billSummaryTable;
    private javax.swing.JList<String> billsList;
    private javax.swing.JButton createPaymentButton;
    private javax.swing.JButton createUpdateBillButton;
    private javax.swing.JButton exportButton;
    private javax.swing.JProgressBar exportProgressBar;
    private javax.swing.JLabel exportProgressLBL;
    private javax.swing.JLabel gainLossLBL;
    private javax.swing.JButton importButton;
    private javax.swing.JLabel importFileLBL;
    private javax.swing.JTable importIssuesTable;
    private javax.swing.JRadioButton incomeBillsBreakdownRB;
    private javax.swing.JTextField incomeDateTF;
    private javax.swing.JTextArea incomeDescriptionTA;
    private javax.swing.JList<String> incomeList;
    private javax.swing.JTable incomeSummaryTable;
    private javax.swing.JTextField incomeTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel listOfBillsLBL;
    private javax.swing.JLabel newBillCategoryLBL;
    private javax.swing.JTextField newBillCategoryTF;
    private javax.swing.JCheckBox newIncomeCategoryCB;
    private javax.swing.JLabel newIncomeCategoryLBL;
    private javax.swing.JTextField newIncomeCategoryTF;
    private javax.swing.JComboBox<String> paymentCategoryCB;
    private javax.swing.JComboBox<String> paymentQueryCB;
    private javax.swing.JList<String> paymentQueryList;
    private javax.swing.JTable paymentQueryTable;
    private javax.swing.JLabel paymentQueryTotalIncomeLBL;
    private javax.swing.JTextField paymentSearchTF;
    private javax.swing.JButton removeBillButton;
    private javax.swing.JButton removePaymentButton;
    private javax.swing.JLabel reportTypeLBL;
    private javax.swing.JLabel totalBillsLBL;
    private javax.swing.JLabel totalMoneyMadeLBL;
    // End of variables declaration//GEN-END:variables
}
